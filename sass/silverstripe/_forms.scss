/* Bootstrap 4 forms styles ported to SilverStripe markup */

.field input,
.field select,
.field textarea {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color; //

  /* Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.*/
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  /* Unstyle the caret on `<select>`s in IE10+.*/
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $input-focus-box-shadow;
    }
  }

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    /* Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526. */
    opacity: 1;
  }

  /* Disabled and read-only inputs */
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    /* iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655. */
    opacity: 1;
  }

  // Fix fake readonly for dealing with autofill see FormHelper::disableAutofill
  &[readonly].autofill-disabled {
    background-color: $input-bg;
  }
}

.field select {
  &:not([size]):not([multiple]) {
    height: $input-height;
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

/* Make file inputs better match text inputs by forcing them to new lines. */

.field input[type="file"],
.field input[type="range"] {
  display: block;
  width: 100%;
}

/* Labels */

// For use with horizontal and inline forms, when you need the label (or legend)
// text to align with the form controls.
.field label {
  padding-top: calc(#{$input-padding-y} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y} + #{$input-border-width});
  margin-bottom: 0; // Override the `<label>/<legend>` default
  font-size: inherit; // Override the `<legend>` default
  line-height: $input-line-height;
}

// For checkboxes, apply padding on the whole block
.field.checkbox {
  padding-top: calc(#{$input-padding-y} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y} + #{$input-border-width});

  label {
    padding-top: 0;
    padding-bottom: 0;
  }
}

/* Readonly controls as plain text */

// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)
.field.readonly input {
  display: block;
  width: 100%;
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-line-height;
  background-color: transparent;
  border: solid transparent;
  border-width: $input-border-width 0;
}

.field.literal {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
}

form {
  .description {
    display: block;
    margin-top: $form-text-margin-top;
    font-size: 80%;
  }

  .field {
    margin-bottom: $spacer;

    &.CompositeField {
      margin-bottom: 0;
    }
  }

  .btn-toolbar {
    .action {
      @extend .btn;
      @include button-variant($primary, $primary);
    }

    p {
      margin: 0;
    }

    a {
      @extend .btn;
      @extend .btn-link;
      font-size: 1em;
    }
  }

  .optionset,
  .checkboxset {
    ul {
      list-style: none;
      padding: 0;
    }

    &.inline {
      li {
        float: left;
      }
    }
  }

  .field.required {
    > label {
      margin-right: 0;
      padding-right: 0;
    }
    > label:after {
      content: " *";
    }
  }

  .field.checkbox {
    &.required {
      &:after {
        content: " *";
      }

      > label:after {
        content: "";
      }
    }
  }

  .error {
    color: $danger;

    input,
    textarea,
    select {
      border-color: $danger;
    }
  }

  // use this to align checkboxes to other regular inputs in a row
  .field.field-aligned {
    margin-top: 2.375rem;
  }

  span.message {
    padding-left: 0;
    padding-right: 0;
    &.required {
      color: $danger;
    }
  }

  &.form-inline {
    fieldset {
      float: left;

      .field {
        float: left;
        margin-bottom: 0;
        margin-right: $spacer;

        label.left {
          float: left;
          margin-right: $spacer/2;
        }

        label.right {
          float: right;
          margin-left: $spacer/2;
        }

        .middleColumn {
          float: left;
        }
      }
    }

    .btn-toolbar {
      float: left;
    }
  }

  &.form-center {
    .btn-toolbar {
      flex-direction: column;
      align-items: center;
    }
  }

  // If we have a readonly form, make clear distinction between labels and field values
  &.readonly {
    label {
      font-weight: bold;
    }
  }
}
